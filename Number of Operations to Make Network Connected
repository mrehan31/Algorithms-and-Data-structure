// 1319. Number of Operations to Make Network Connected

class Solution {
public:
    int makeConnected(int n, vector<vector<int>>& connections) {
        if(connections.size() < n-1)    return -1;
        
        vector<vector<int>> graph(n);
        
        for(auto v: connections){
            graph[v[0]].push_back(v[1]);
            graph[v[1]].push_back(v[0]);
        }
        
        vector<bool> visited(n, false);
        
        int components = 0;
        
        for(int i=0; i<n; i++){
            if(!visited[i]){
                dfs(graph, visited, i);
                components++;
            }
        }
        return components-1;
    }
    
    void dfs(vector<vector<int>> &graph, vector<bool>& visited, int curNode){
        visited[curNode] = true;
        
        for(int neighbor: graph[curNode]){
            if(!visited[neighbor])
                dfs(graph, visited, neighbor);
        }
    }
};
