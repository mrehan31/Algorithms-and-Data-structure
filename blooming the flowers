class Solution {
    bool ifKBouqPossible(vector<int>&bloomDays, int mid, int m, int k){
        int count = 0;
        for(int bloomDay:bloomDays){
            if(bloomDay <= mid){
                count++;
                if(count == k){
                    m--;
                    count = 0;
                }
                if(m == 0)  return true;
            }
            else
                count = 0;
        }
        return false;
    }

public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        int left = 0, right = *max_element(bloomDay.begin(), bloomDay.end());

        int minVal = -1;

        while(left<=right){
            int mid = left + (right - left)/2;

            if(ifKBouqPossible(bloomDay, mid, m,k)){
                minVal = mid;
                right = mid-1;
            }
            else{
                left = mid+1;
            }
        }
        return minVal;
    }
};
