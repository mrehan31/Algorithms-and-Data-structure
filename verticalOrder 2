class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
        queue<pair<TreeNode*, int>> q;
        vector<vector<int>> result;

        if(root == nullptr) return result;

        unordered_map<int, vector<int>> map;

        int minLevel = INT_MAX, maxLevel = INT_MIN;

        q.push({root, 0});

        while(!q.empty()){
            int qSize = q.size();

            for(int i=0; i<qSize; i++){
                auto curNode = q.front();
                q.pop();
                
                TreeNode* node = curNode.first;
                int level = curNode.second;

                minLevel = min(minLevel, level);
                maxLevel = max(maxLevel, level);

                map[level].push_back(node->val);

                if(node->left)    q.push({node->left, level-1});
                if(node->right)   q.push({node->right, level+1});
            }
        }
        
        for(int i = minLevel; i<= maxLevel; i++){
            result.push_back(map[i]);
        }
        return result;
    }
};
