// 684. Redundant Connection

class Solution {
    vector<int> par;
public:
    vector<int> findRedundantConnection(vector<vector<int>>& edges) {
        
        int n = edges.size();
        
        for(int i=0; i<=n; i++){
            par.push_back(i);
        }
        
        for(auto e: edges){
            if(!Union(e[0], e[1]))
                return e;
        }
        return {};
    }
    
    bool Union(int x, int y){
        int xp = find(x), yp = find(y);
        
        if(xp == yp)    
            return false;
        else{
            par[yp] = xp;
            return true;
        }
    }
    
    int find(int x){
        if(x == par[x])
            return x;
        else{
            par[x] = find(par[x]);
            return par[x];
        }
    }
};
