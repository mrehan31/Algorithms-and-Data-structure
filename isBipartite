class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        vector<int> color(n, 0);
        queue<int> queue;

        for(int i=0; i<n; i++){
            if(color[i] == 0){
                color[i] = 1;
                queue.push(i);

                while(!queue.empty()){
                    int curNode = queue.front();
                    queue.pop();

                    for(int neigh: graph[curNode]){
                        if(color[neigh] == 0){
                            color[neigh] = -1*color[curNode];
                            queue.push(neigh);
                        }
                        else if(color[curNode] == color[neigh])
                            return false;
                    }
                }
            }
        }
        return true;
    }
};
