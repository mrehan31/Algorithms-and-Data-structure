// 662. Maximum Width of Binary Tree

class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        
        if (!root)return 0;
        
        queue<pair<TreeNode*, int>> que;
        
        que.push({root, 0});
        
        int width = 0;
        
        while (que.size() != 0) {
            
            long left = que.front().second, right = 0;
            int size = que.size();
            
            for (int i=0; i<size; i++) {
                pair<TreeNode*, long> rNode = que.front();
                que.pop();
                
                right = rNode.second;
                
                if (rNode.first->left) {
                    que.push({rNode.first->left, 2 * rNode.second + 1});
                }
                if (rNode.first->right) {
                    que.push({rNode.first->right, 2 * rNode.second + 2});
                }
            }
            width = max(width, int(right - left + 1));
        }
        return width;
    }
};
