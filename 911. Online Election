// 911. Online Election

class TopVotedCandidate {
    vector<pair<int,int>> history;
    unordered_map<int, int> count;
    int mostVotes = 0, winner = -1;
public:
    TopVotedCandidate(vector<int>& persons, vector<int>& times) {
        for(int i=0; i<persons.size(); i++){
            count[persons[i]]++;
            if(count[persons[i]] >= mostVotes){
                mostVotes = count[persons[i]];
                winner = persons[i];
            }
            history.push_back({winner, times[i]});
        }
    }
    
    int q(int t) {
        int l = 0, r = history.size()-1, res = 0;

        while(l<=r){
            int mid = l + (r-l)/2;

            if(history[mid].second == t)    return history[mid].first;

            if(history[mid].second<t){
                res = mid;
                l = mid+1;
            }
            else r = mid - 1;
        }
        return history[res].first;
    }
};
