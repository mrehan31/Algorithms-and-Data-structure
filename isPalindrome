class Solution {
  ListNode* findMid(ListNode* head){
    ListNode* slow = head, *fast = head;
    while(fast && fast->next){
      slow = slow->next;
      fast = fast->next->next;
    }
    return slow;
  }
  ListNode* reverse(ListNode* head){
    ListNode* prev = nullptr;

    while(head){
      ListNode* next = head->next;
      head->next = prev;
      prev = head;
      head = next;
    }
    return prev;
  }
public:
  bool isPalindrome(ListNode *head) {
    ListNode* mid = findMid(head);
    ListNode* newHead = reverse(mid);
    
    while(newHead){
      if(head->val != newHead->val) return false;
      head = head->next;
      newHead = newHead->next;
    }

    return true;
  }
};
