// 130. Surrounded Regions

class Solution {
public:
    
    void dfs(vector<vector<char>> &board, int r, int c){
        if(r<0 || r>=board.size() || c<0 || c>=board[0].size() || board[r][c] != 'O')
            return;
        
        board[r][c] = '2';
        
        vector<vector<int>> dir = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};
        
        for(auto d:dir)
            dfs(board, r+d[0], c+d[1]);
    }
    void solve(vector<vector<char>>& board) {
        if(board.size() == 0) return;
        
        for(int col = 0; col<board[0].size(); col++){
            if(board[0][col] == 'O') dfs(board, 0, col);
            if(board[board.size() - 1][col] == 'O')    dfs(board, board.size()-1, col);
        }
        
        for(int row = 0; row<board.size(); row++){
            if(board[row][0] == 'O') dfs(board, row, 0);
            if(board[row][board[0].size() - 1] == 'O')    dfs(board, row, board[0].size()-1);
        }
        
        for(int i=0; i<board.size(); i++){
            for(int j=0; j<board[0].size(); j++){
                if(board[i][j] == '2')
                    board[i][j] = 'O';
                else
                    board[i][j] = 'X';
            }
        }
    }
};
