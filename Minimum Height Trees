// 310. Minimum Height Trees

class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {
        vector<vector<int>> graph(n);
        
        vector<int> inDegree(n, 0), ans;
        
        if(n == 1) return {0};
        
        for(auto e:edges){
            graph[e[0]].push_back(e[1]);
            graph[e[1]].push_back(e[0]);
            inDegree[e[0]]++;
            inDegree[e[1]]++;
        }
        
        queue<int> q;
        
        for(int i=0; i<inDegree.size(); i++){
            if(inDegree[i] == 1)
                q.push(i);
        }
        
        while(!q.empty()){
            int size = q.size();
            ans.clear();
            
            for(int i=0; i<size; i++){
                int curNode = q.front();
                q.pop();
                
                ans.push_back(curNode);
                
                for(auto parent: graph[curNode]){
                    inDegree[parent]--;
                    
                    if(inDegree[parent] == 1)
                        q.push(parent);
                }
            }  
        }
        return ans;
    }
};
