class Solution {
    ListNode* merge(ListNode*l1, ListNode*l2){
        if(!l1) return l2;
        if(!l2) return l1;
        if(l1->val < l2->val){
            l1->next = merge(l1->next, l2);
            return l1;
        }
        else{
            l2->next = merge(l1, l2->next);
            return l2;
        }
    }
    ListNode* helper(int left, int right, vector<ListNode*>&lists){
        if(left > right)    return nullptr;
        if(left == right)   return lists[left];

        int mid = left + (right - left)/2;
        return merge(helper(left, mid, lists), helper(mid+1, right, lists));
    }
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        return helper(0, lists.size()-1, lists);
    }
};
