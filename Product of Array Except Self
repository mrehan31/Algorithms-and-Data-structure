// 238. Product of Array Except Self

/*class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        
        vector<int> ans(n);
        
        vector<int> leftProd(n), rightProd(n);
        
        leftProd[0] = 1;
        
        for(int i=1; i<n; i++)
            leftProd[i] = nums[i-1]* leftProd[i-1];
        
        rightProd[n-1] = 1;
        
        for(int i=n-2; i>=0; i--)
            rightProd[i] = nums[i+1]*rightProd[i+1];
        
        for(int i=0; i<n; i++){
            ans[i] = leftProd[i]*rightProd[i];
        }
        
        return ans;
    }
};*/

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        
        vector<int> ans(n);
        
        ans[0] = 1;
        
        for(int i=1; i<n; i++)
            ans[i] = nums[i-1] * ans[i-1];
        
        int rightProd = 1;
        
        for(int i=n-1; i>=0; i--){
            ans[i] = rightProd * ans[i];
            rightProd = rightProd * nums[i];
        }
        
        return ans;
    }
};
