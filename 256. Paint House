// 256. Paint House

// class Solution {
// public:
//     int minCost(vector<vector<int>>& costs) {
//         vector<vector<int>> dp = costs;
//         for(int i = costs.size()-2; i>=0; i--){
//             for(int j=0; j<3; j++){
//                 dp[i][j] = costs[i][j] + min(dp[i+1][(j+1)%3], dp[i+1][(j+2)%3]);
//             }
//         }
//         int minVal = min(dp[0][0], min(dp[0][1], dp[0][2]));
//         return minVal;
//     }
// };

class Solution {
public:
    int minCost(vector<vector<int>>& costs) {
        vector<vector<int>> dp(costs.size(), vector<int>(3, -1));
        return min(helper(costs, 0, 0, dp), min(helper(costs, 0, 1, dp), helper(costs, 0, 2, dp)));
    }
    int helper(vector<vector<int>> &costs, int i, int j, vector<vector<int>>& dp){
        if(i== costs.size()-1)    return costs[i][j];

        if(dp[i][j] != -1)  return dp[i][j];

        return dp[i][j] = costs[i][j] + min(helper(costs, i+1, (j+1)%3, dp), helper(costs, i+1, (j+2)%3, dp));
    }
};
