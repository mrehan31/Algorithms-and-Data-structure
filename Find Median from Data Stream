// 295. Find Median from Data Stream

class MedianFinder {
    priority_queue<int> maxHeap;
    priority_queue<int, vector<int>, greater<int>> minHeap;
    
public:
    
    MedianFinder() {
        
    }
    
    
    void addNum(int num) {
           
        maxHeap.push(num);                                    // Add to max heap

        minHeap.push(maxHeap.top());                               // balancing step
        maxHeap.pop();

        if (maxHeap.size() < minHeap.size()) {                     // maintain size property
            maxHeap.push(minHeap.top());
            minHeap.pop();
        }  
    }
    
    double findMedian() {
        if(minHeap.size() == maxHeap.size())
            return (minHeap.top() + maxHeap.top())/2.0;
        else
            return maxHeap.top();
    }
};
